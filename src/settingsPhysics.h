#ifndef settingsPhysics_h
#define settingsPhysics_h


#include "utilMath.h"


// Collider settings.
#define COLLIDER_HULL_USE_VERTEX_WEIGHT


// Physics settings.
#define PHYSICS_BASE_UPDATE_RATE 120.f
#define PHYSICS_UPDATE_RATE 120.f
#define PHYSICS_VELOCITY_SOLVER_NUM_ITERATIONS 4
#define PHYSICS_POSITION_SOLVER_NUM_ITERATIONS 4

#define CONTACT_MANIFOLD_SIMPLE_KEYS

#define PHYSCONTACT_LINEAR_SLOP 0.05f
#define PHYSCONTACT_MAX_LINEAR_CORRECTION 0.2f
#define PHYSCONTACT_LINEAR_POSITIONAL_ERROR_THRESHOLD (-3.f * PHYSCONTACT_LINEAR_SLOP)

#define PHYSCONTACT_RESTITUTION_THRESHOLD 1.f

#define PHYSCONTACT_WARM_START
#define PHYSCONTACT_STABILISER_BAUMGARTE
#define PHYSCONTACT_STABILISER_GAUSS_SEIDEL
#define PHYSCONTACT_BAUMGARTE_BIAS 0.2f

#define PHYSCONTACT_USE_FRICTION_JOINT
//#define PHYSCONTACT_FRICTION_DELAY
#define PHYSCONTACT_FRICTION_GEOMETRIC_AVERAGE

#define PHYSJOINT_LINEAR_SLOP 0.05f
#define PHYSJOINT_MAX_LINEAR_CORRECTION 0.2f
#define PHYSJOINT_LINEAR_POSITIONAL_ERROR_THRESHOLD (3.f * PHYSJOINT_LINEAR_SLOP)
#define PHYSJOINT_ANGULAR_SLOP 0.005f
#define PHYSJOINT_MAX_ANGULAR_CORRECTION 0.02f
#define PHYSJOINT_ANGULAR_POSITIONAL_ERROR_THRESHOLD (3.f * PHYSJOINT_ANGULAR_SLOP)

#define PHYSJOINTFRICTION_WARM_START
#define PHYSJOINTDISTANCE_WARM_START
#define PHYSJOINTFIXED_WARM_START
#define PHYSJOINTREVOLUTE_WARM_START
#define PHYSJOINTPRISMATIC_WARM_START
// Warm starting the spherical joint introduces too much "bounce-back".
// This seems to be an issue with both the angular and linear parts.
//#define PHYSJOINTSPHERE_WARM_START

#define PHYSJOINTDISTANCE_STABILISER_GAUSS_SEIDEL
#define PHYSJOINTFIXED_STABILISER_GAUSS_SEIDEL
#define PHYSJOINTREVOLUTE_STABILISER_GAUSS_SEIDEL
#define PHYSJOINTPRISMATIC_STABILISER_GAUSS_SEIDEL
// Using Gauss-Seidel with the spherical joint damps restitution too much.
// This is mostly caused by the angular component, but the linear component
// also contributes to the issue, albeit to a much lesser degree. However,
// without this, very small angular limits tend to be very unstable.
// That shouldn't be too big a deal though, as we can just use a fixed joint.
//#define PHYSJOINTSPHERE_STABILISER_GAUSS_SEIDEL

#define PHYSJOINTDISTANCE_BAUMGARTE_BIAS  0.3f
#define PHYSJOINTFIXED_BAUMGARTE_BIAS     0.3f
#define PHYSJOINTREVOLUTE_BAUMGARTE_BIAS  0.3f
#define PHYSJOINTPRISMATIC_BAUMGARTE_BIAS 0.3f
#define PHYSJOINTSPHERE_BAUMGARTE_BIAS    0.3f

//#define PHYSJOINTSPHERE_ANGULAR_CONSTRAINT_EULER
//#define PHYSJOINTSPHERE_SWING_USE_ELLIPSE_NORMAL

#define PHYSISLAND_AABBTREE_NODE_EXPAND_BY_VELOCITY
#define PHYSISLAND_AABBTREE_NODE_PADDING 0.2f

#define PHYSCOLLIDER_DEFAULT_MASS        0.f
#define PHYSCOLLIDER_DEFAULT_DENSITY     0.f
#define PHYSCOLLIDER_DEFAULT_FRICTION    1.f
#define PHYSCOLLIDER_DEFAULT_RESTITUTION 1.f
#define PHYSCOLLIDER_EXPLICIT_MASS

#define PHYSRIGIDBODY_GRAVITY -9.80665f


#endif