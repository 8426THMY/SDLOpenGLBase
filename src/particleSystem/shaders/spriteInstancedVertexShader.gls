#version 330 core


#define MAX_INSTANCES 40


// Each sprite instance requires this data to be drawn.
// Note that this structure is compatible with the std140
// layout, as it is really just an array of vec4's.
struct instanceData {
    mat4x3 state;
    vec4 uvOffsets;
};


uniform mat4 vpMatrix;
// Array of data for each sprite instance we can draw.
// The size must be less than GL_MAX_UNIFORM_BLOCK_SIZE.
layout (std14) uniform instanceBlock {
	instanceData instances[MAX_INSTANCES];
};

layout(location = 0) in vec3 vertexPos;
layout(location = 1) in vec2 vertexUV;

out vec2 uv;


void main(){
	// Grab the current instance's data.
	instanceData curInstance = instanceBlock[gl_InstanceID];

	gl_Position = vpMatrix * vec4(curInstance.state * vec4(vertexPos, 1.f), 1.f);
	// Only use the area of the texture specified in the uvOffsets array!
	uv.x = (vertexUV.x * curInstance.uvOffsets[2]) + curInstance.uvOffsets[0];
	uv.y = (vertexUV.y * curInstance.uvOffsets[3]) + curInstance.uvOffsets[1];
}